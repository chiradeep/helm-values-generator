{"version":3,"sources":["SidebarItems.js","HelmForm.js","chart-tier-1.js","cpx-cic.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["SidebarItems","this","props","items","map","item","Menu","Item","as","key","onClick","e","React","Component","Form","withTheme","SemanticTheme","HelmForm","state","formData","yamlStr","toYaml","bind","console","log","formId","x","group","k","splits","split","q","p","slice","t","exporterSettings","exporter","yaml","safeDump","setState","setParentState","Grid","Column","width","schema","noHtml5Validate","liveValidate","showErrorList","uiSchema","uischema","onChange","onSubmit","onError","type","Button","primary","Header","dividing","style","marginTop","language","tier1schema","properties","adcSettings","title","required","nsIp","format","nsPort","default","maximum","minimum","nsVIP","nsProtocol","enum","nsNamespace","defaultSSLCert","nodeWatch","deploymentSettings","cicImageSettings","dependencies","oneOf","const","tier1uischema","cpxcicschema","cpxSettings","lsIp","lsPort","cpxcicuischema","Copyright","Segment","attached","padded","margin","border","href","Date","getFullYear","Dashboard","useState","setformId","yamlStrs","data","schemaForForm","uischemaForForm","MainContent","Row","inverted","className","Sidebar","Pushable","basic","borderRadius","borderTop","borderBottom","top","vertical","visible","itemName","Pusher","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a4bba13b.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\n\n\n\nclass SidebarItems extends React.Component {\n  render() {\n        return (\n          <>\n          {this.props.items.map(((item) => {\n            return (\n              <Menu.Item as='a' key={item} onClick={(e) => this.props.onClick(item, e)}>\n                {item} \n              </Menu.Item>\n            );\n          }))}\n          </>\n        );\n          \n  }\n}\n\nexport default SidebarItems;\n","import React from 'react';\nimport './App.css';\nimport { withTheme } from '@rjsf/core';\nimport { Theme as SemanticTheme } from '@chiradeep/rjsf-semantic-ui';\n\nimport yaml from 'js-yaml';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport {Button, Header, Grid} from 'semantic-ui-react';\n\nconst log = (type) => console.log.bind(console, type);\nconst Form = withTheme(SemanticTheme);\n\nclass HelmForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {formData: {...props.formData}, yamlStr: props.yamlStr};\n    this.toYaml = this.toYaml.bind(this);\n    console.log('constructor: formData', this.props.formData);\n\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount: formData', this.props.formData);\n    console.log('componentDidMount: yamlStr', this.props.yamlStr);\n    console.log('componentDidMount: formId', this.props.formId);\n  }\n\n  toYaml({formData}) {\n    //console.log({formData});\n\n    var x = {};\n    for (let group in formData) {\n      for (let k in formData[group]) {\n        var splits = k.split('.'); //e.g., exporter.ports.containerPorts\n        var q = formData[group][k];\n        if (q) { //sometimes it is 'undefined' leading to exceptions in safeDump\n          var p = x;\n          for (let t of splits.slice(0, -1)) {\n            if (!(t in p)) {\n              p[t] = {};\n            }\n            p = p[t];\n          }\n          p[splits.slice(-1)] = q;\n        }\n      }\n    }\n    if (!formData.exporterSettings['exporter.required']) {\n      delete x.exporter;\n    }\n    var yamlStr = yaml.safeDump(x);\n    console.log(yamlStr);\n    this.setState({formData: {...formData}, yamlStr: yamlStr});\n    this.props.setParentState(this.props.formId, {...formData}, yamlStr);\n  }\n\n  render() {\n    return (\n      <>\n        <Grid.Column width={7}>\n            <Form\n                  schema={this.props.schema}\n                  noHtml5Validate\n                  formData={this.state.formData}\n                  liveValidate={true}\n                  showErrorList={false}\n                  uiSchema={this.props.uischema}\n                  onChange={this.toYaml}\n                  onSubmit={this.toYaml}\n                  onError={log('errors')}\n            >\n            <Button primary type=\"submit\" >Generate values.yaml</Button>\n            </Form>\n        </Grid.Column>\n          <Grid.Column width={9}>\n            <Header dividing as={'h5'} style={{marginTop: 0}}>Values.yaml</Header>\n            <SyntaxHighlighter language=\"yaml\">\n              {this.state.yamlStr}\n            </SyntaxHighlighter>\n          </Grid.Column>\n        </>\n    );\n  }\n}\n\nexport default HelmForm;\n","export const tier1schema = {\n  properties: {\n\t\tadcSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"ADC Settings\",\n\t\t\trequired: [\"nsIp\"],\n\t\t\tproperties: {\n\t\t\t\tnsIp: {type: \"string\", title: \"Citrix ADC IP\", format:\"ipv4\"},\n\t\t\t\tnsPort: {type: \"number\", title: \"ADC Port\",  default: 443, maximum: 64000, minimum:1},\n\t\t\t\tnsVIP: {type: \"string\", title: \"Virtual IP for the clients to connect to\", format:\"ipv4\"},\n\t\t\t\tnsProtocol: {type: \"string\", title: \"ADC Management Protocol\", enum:[\"HTTPS\", \"HTTP\"], default: \"HTTPS\"},\n\t\t\t\tnsNamespace: {type: \"string\", title: \"ADC Entity Prefix\"},\n\t\t\t\tdefaultSSLCert: {type: \"string\", title: \"Default SSLCert\"},\n\t\t\t\tnodeWatch: {type: \"boolean\", title: \"Node Watch\", default: false},\n\t\t\t}\n\t\t},\n\t\tdeploymentSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Deployment Settings\",\n\t\t\tproperties: {\n\t\t\t\t'kubernetesURL': {type: \"string\", title: \"Kubernetes API-server URL\", format:\"url\"},\n\t\t\t\t'license.accept': {type: \"boolean\", title: \"Accept License\", default: false},\n\t\t\t\t'ingressClass': {type: \"string\", title: \"Ingress Class for the controller\"},\n\t\t\t\t'logLevel': {type: \"string\", default: \"DEBUG\", title: \"Ingress Controller Log Level\", enum:[\"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"TRACE\"]},\n\t\t\t}\n\t\t},\n\t\tcicImageSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Citrix Ingress Controller Image Settings\",\n\t\t\tproperties: {\n\t\t\t\t'cic.image': {type: \"string\", title: \"Citrix Ingress Controller Image\", default:\"quay.io/citrix/citrix-k8s-ingress-controller:1.7.6\"},\n\t\t\t\t'cic.pullpolicy': {type: \"string\", default: \"IfNotPresent\", title: \"Image Pull Policy\", enum: [\"Always\", \"IfNotPresent\", \"Never\"]}\n\t\t\t}\n\t\t},\n\t\texporterSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Citrix ADC Metrics Exporter Settings\",\n\t\t\tproperties: {\n\t\t\t\t'exporter.required': {type: \"boolean\", title: \"Exporter Required\"},\n\t\t\t\t\n\t\t\t},\n\t\t\tdependencies: {\n\t\t\t\t'exporter.required': {\n\t\t\t\t\toneOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t  \"exporter.required\": {\n\t\t\t\t\t\t\t\tconst: false\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t  \"exporter.required\": {\n\t\t\t\t\t\t\t\tconst: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'exporter.image': {type: \"string\", title: \"Citrix ADC Metrics Exporter Image\", default:'quay.io/citrix/citrix-adc-metrics-exporter:1.4.0'},\n\t\t\t\t\t\t\t'exporter.pullpolicy': {type: \"string\", default: \"IfNotPresent\", title: \"Image Pull Policy\", enum: [\"Always\", \"IfNotPresent\", \"Never\"]},\n\t\t\t\t\t\t\t'exporter.ports.containerPort': {type: \"number\", title: \"Exporter Container Port\", default: 8888, minimum:1, maximum:64000}\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n};\n\nexport const tier1uischema = {\n\tadcSettings: {\n\t\t\"nsIp\" : {\n\t\t\t\"ui:description\": \"Citrix ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)\"\n\t\t},\n\t\t\"nsNamespace\": {\n\t\t\t\"ui:description\": \"Resources created on the ADC will have this prefix in their name\"\n\t\t},\n\t\t\"defaultSSLCert\": {\n\t\t\t\"ui:description\": \"Secret containing the default ceritifcate for SSL vservers\"\n\t\t},\t\n\t\t\"nodeWatch\": {\n\t\t\t\"ui:description\": \"When checked, routes on the Citrix ADC are automatically configured to point to the pod networks on the nodes\",\n\t\t}\n\t},\n\tdeploymentSettings: {\n\t\t\"license.accept\": {\n\t\t\t\"ui:description\": \"Accept the terms and conditions of the Citrix license. This is mandatory\"\n\t\t} \n\t}\n}\n","export const cpxcicschema = {\n  properties: {\n\t\tcpxSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"CPX Settings\",\n\t\t\tproperties: {\n\t\t\t\t'cpx.image': {type: \"string\", title: \"Citrix ADC CPX Image\", default:\"quay.io/citrix/citrix-k8s-cpx-ingress:13.0-47.103\"},\n\t\t\t\t'cpx.pullpolicy': {type: \"string\", default: \"IfNotPresent\", title: \"Image Pull Policy\", enum: [\"Always\", \"IfNotPresent\", \"Never\"]},\n\t\t\t\tnsNamespace: {type: \"string\", title: \"ADC Entity Prefix\"},\n\t\t\t\tdefaultSSLCert: {type: \"string\", title: \"Default SSLCert\"},\n\t\t\t\tlsIp: {type: \"string\", title: \"License Server IP\", format:\"ipv4\"},\n\t\t\t\tlsPort: {type: \"number\", title: \"License Server Port\", minimum:1, maximum:64000}\n\t\t\t}\n\t\t},\n\t\tdeploymentSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Deployment Settings\",\n\t\t\tproperties: {\n\t\t\t\t'license.accept': {type: \"boolean\", title: \"Accept License\", default: false},\n\t\t\t\t'ingressClass': {type: \"string\", title: \"Ingress Class for the controller\"},\n\t\t\t\t'openshift': {type: \"boolean\", title: \"OpenShift Support\", default: false},\n\t\t\t\t'logLevel': {type: \"string\", default: \"DEBUG\", title: \"Ingress Controller Log Level\", enum:[\"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"TRACE\"]},\n\t\t\t}\n\t\t},\n\t\texporterSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Citrix ADC Metrics Exporter Settings\",\n\t\t\tproperties: {\n\t\t\t\t'exporter.required': {type: \"boolean\", title: \"Exporter Required\"},\n\t\t\t\t\n\t\t\t},\n\t\t\tdependencies: {\n\t\t\t\t'exporter.required': {\n\t\t\t\t\toneOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t  \"exporter.required\": {\n\t\t\t\t\t\t\t\tconst: false\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t  \"exporter.required\": {\n\t\t\t\t\t\t\t\tconst: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'exporter.image': {type: \"string\", title: \"Citrix ADC Metrics Exporter Image\", default:'quay.io/citrix/citrix-adc-metrics-exporter:1.4.0'},\n\t\t\t\t\t\t\t'exporter.pullpolicy': {type: \"string\", default: \"IfNotPresent\", title: \"Image Pull Policy\", enum: [\"Always\", \"IfNotPresent\", \"Never\"]},\n\t\t\t\t\t\t\t'exporter.ports.containerPort': {type: \"number\", title: \"Exporter Container Port\", default: 8888, minimum:1, maximum:64000}\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n};\n\nexport const cpxcicuischema = {\n\tcpxSettings: {\n\t\t\"nsNamespace\": {\n\t\t\t\"ui:description\": \"Resources created on the CPX will have this prefix in their name\"\n\t\t},\n\t\t\"defaultSSLCert\": {\n\t\t\t\"ui:description\": \"Secret containing the default ceritifcate for SSL vservers\"\n\t\t},\n\t\t\"lsPort\": {\n\t\t\t\"ui:description\": \"Specify this only if the ADM license server port has been changed\",\n\t\t}\n\t},\n\tdeploymentSettings: {\n\t\t\"license.accept\": {\n\t\t\t\"ui:description\": \"Accept the terms and conditions of the Citrix license. This is mandatory\"\n\t\t} \n\t}\n}\n","import React from 'react';\nimport {Sidebar, Menu, Grid, Segment, Item, Header} from 'semantic-ui-react';\nimport SidebarItems from './SidebarItems';\nimport HelmForm from './HelmForm';\nimport {tier1schema, tier1uischema} from './chart-tier-1';\nimport {cpxcicschema, cpxcicuischema} from './cpx-cic';\n\nfunction Copyright() {\n  return (\n    <Segment attached={'bottom'} padded style={{margin: '0rem 1.5rem', border: '0'}}>\n      {'Copyright © '}\n      <Item as={'a'} href=\"https://citrix.com/\">\n        Citrix Systems\n      </Item>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Segment>\n  );\n}\n\nexport default function Dashboard() {\n  const items = ['Citrix ADC in Tier 1', 'CPX in Tier 2', 'Istio Ingress Gateway', 'CPX as Istio Sidecar'];\n\n  const [formId, setformId] = React.useState('Citrix ADC in Tier 1');\n  /*const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };*/\n\n  const itemClick = (itemName, e) => {\n    console.log('Clicked on ' + itemName);\n    setformId(itemName);\n  }\n\n  const [formData] = React.useState({[items[0]]: {}, [items[1]]: {}, [items[2]]: {}, [items[3]]: {}});\n  const [yamlStrs] = React.useState({[items[0]]: '', [items[1]]: '', [items[2]]: '', [items[3]]: ''});\n\n  //let formData  = {[items[0]]: {}, [items[1]]: {}, [items[2]]: {}, [items[3]]: {}};\n  //let yamlStrs  = {[items[0]]: '', [items[1]]: '', [items[2]]: '', [items[3]]: ''};\n\n  const setParentState = (formId, data, yamlStr) => {\n    //setFormData(prevFormData => ({...prevFormData, [formData[formId]]:data}));\n    //setYamlStrs(prevYamlStrs =>({...prevYamlStrs, [prevYamlStrs[formId]]: yamlStr}));\n    //formData = {...formData, [formData[formId]]:data};\n    formData[formId] = data;\n    yamlStrs[formId] = yamlStr;\n    console.log('Form id= ' + formId);\n    console.log('Form data= ', formData[formId]);\n    console.log('Yaml: ', yamlStrs[formId]);\n  }\n\n  const schemaForForm = (formId) => {\n    //TODO\n    switch (formId) {\n      case items[0]:\n        return tier1schema;\n      case items[1]:\n        return cpxcicschema;\n      default:\n        return tier1schema;\n    }\n  }\n\n  const uischemaForForm = (formId) => {\n    //TODO\n    switch (formId) {\n      case items[0]:\n        return tier1uischema;\n      case items[1]:\n        return cpxcicuischema;\n      default:\n        return tier1uischema;\n    }\n  }\n\n  const MainContent = ({formId, formData, yamlStr}) => {\n    return (\n      <>  \n     \n      <Grid.Row>\n          <HelmForm schema={schemaForForm(formId)}\n                    uischema={uischemaForForm(formId)}\n                    formData={formData}\n                    yamlStr={yamlStr}\n                    setParentState={setParentState}\n          />\n       </Grid.Row>\n        </>\n    );\n  }\n\n  return (\n    <>\n    <Header inverted attached={'top'} as={'h1'} className='mastHead'>Citrix Helm Charts Values Generator</Header>\n    <Sidebar.Pushable attached={'top'} basic as={Segment} style={{marginTop: '0', borderRadius: '0', borderTop: '0', borderBottom: '0'}}>\n      <Sidebar\n        style={{top: '-1px'}}\n        as={Menu}\n        inverted={false}\n        vertical\n        visible={true}\n        width='wide'\n      >\n        <SidebarItems items={items} onClick={itemClick}/>\n      </Sidebar>\n      <Sidebar.Pusher>\n    <Header as={'h3'} attached={'top'} style={{border: '0', margin: '1.5rem 2rem 0 2rem'}}>{formId}</Header>\n        <Grid className='mainlayout'>\n          <MainContent\n            formId={formId}\n            formData={formData[formId]}\n            yamlStr={yamlStrs[formId]}\n            setParentState={setParentState}\n          />\n        </Grid>\n        <Copyright/>\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n      </>\n  );\n}\n\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\n\nclass App extends React.Component {\n\n\trender() {\n\t  return (\n\t\t<Dashboard/>\n\t  );\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}