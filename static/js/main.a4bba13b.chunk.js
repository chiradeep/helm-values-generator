(this["webpackJsonphelm-values-generator"]=this["webpackJsonphelm-values-generator"]||[]).push([[0],{1205:function(e,t,r){"use strict";r.r(t);var a=r(0),i=r.n(a),n=r(81),o=r.n(n),s=(r(573),r(574),r(155)),l=r(156),c=r(159),p=r(160),m=(r(357),r(95)),u=r(260),d=r(1253),f=r(1246),g=r(1251),y=r(1252),h=r(1248),x=r(1250),C=function(e){Object(p.a)(r,e);var t=Object(c.a)(r);function r(){return Object(s.a)(this,r),t.apply(this,arguments)}return Object(l.a)(r,[{key:"render",value:function(){var e=this;return i.a.createElement(i.a.Fragment,null,this.props.items.map((function(t){return i.a.createElement(x.a.Item,{as:"a",key:t,onClick:function(r){return e.props.onClick(t,r)}},t)})))}}]),r}(i.a.Component),S=r(507),b=r(258),v=r(241),P=r(347),I=r(513),E=r(539),D=r.n(E),j=r(1247),O=r(1249),A=Object(P.withTheme)(I.Theme),w=function(e){Object(p.a)(r,e);var t=Object(c.a)(r);function r(e){var a;return Object(s.a)(this,r),(a=t.call(this,e)).state={formData:Object(b.a)({},e.formData),yamlStr:e.yamlStr},a.toYaml=a.toYaml.bind(Object(v.a)(a)),console.log("constructor: formData",a.props.formData),a}return Object(l.a)(r,[{key:"componentDidMount",value:function(){console.log("componentDidMount: formData",this.props.formData),console.log("componentDidMount: yamlStr",this.props.yamlStr),console.log("componentDidMount: formId",this.props.formId)}},{key:"toYaml",value:function(e){var t=e.formData,r={};for(var a in t)for(var i in t[a]){var n=i.split("."),o=t[a][i];if(o){var s,l=r,c=Object(S.a)(n.slice(0,-1));try{for(c.s();!(s=c.n()).done;){var p=s.value;p in l||(l[p]={}),l=l[p]}}catch(u){c.e(u)}finally{c.f()}l[n.slice(-1)]=o}}t.exporterSettings["exporter.required"]||delete r.exporter;var m=D.a.safeDump(r);console.log(m),this.setState({formData:Object(b.a)({},t),yamlStr:m}),this.props.setParentState(this.props.formId,Object(b.a)({},t),m)}},{key:"render",value:function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement(g.a.Column,{width:7},i.a.createElement(A,{schema:this.props.schema,noHtml5Validate:!0,formData:this.state.formData,liveValidate:!0,showErrorList:!1,uiSchema:this.props.uischema,onChange:this.toYaml,onSubmit:this.toYaml,onError:(e="errors",console.log.bind(console,e))},i.a.createElement(O.a,{primary:!0,type:"submit"},"Generate values.yaml"))),i.a.createElement(g.a.Column,{width:9},i.a.createElement(y.a,{dividing:!0,as:"h5",style:{marginTop:0}},"Values.yaml"),i.a.createElement(j.a,{language:"yaml"},this.state.yamlStr)));var e}}]),r}(i.a.Component),N={properties:{adcSettings:{type:"object",title:"ADC Settings",required:["nsIp"],properties:{nsIp:{type:"string",title:"Citrix ADC IP",format:"ipv4"},nsPort:{type:"number",title:"ADC Port",default:443,maximum:64e3,minimum:1},nsVIP:{type:"string",title:"Virtual IP for the clients to connect to",format:"ipv4"},nsProtocol:{type:"string",title:"ADC Management Protocol",enum:["HTTPS","HTTP"],default:"HTTPS"},nsNamespace:{type:"string",title:"ADC Entity Prefix"},defaultSSLCert:{type:"string",title:"Default SSLCert"},nodeWatch:{type:"boolean",title:"Node Watch",default:!1}}},deploymentSettings:{type:"object",title:"Deployment Settings",properties:{kubernetesURL:{type:"string",title:"Kubernetes API-server URL",format:"url"},"license.accept":{type:"boolean",title:"Accept License",default:!1},ingressClass:{type:"string",title:"Ingress Class for the controller"},logLevel:{type:"string",default:"DEBUG",title:"Ingress Controller Log Level",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}},cicImageSettings:{type:"object",title:"Citrix Ingress Controller Image Settings",properties:{"cic.image":{type:"string",title:"Citrix Ingress Controller Image",default:"quay.io/citrix/citrix-k8s-ingress-controller:1.7.6"},"cic.pullpolicy":{type:"string",default:"IfNotPresent",title:"Image Pull Policy",enum:["Always","IfNotPresent","Never"]}}},exporterSettings:{type:"object",title:"Citrix ADC Metrics Exporter Settings",properties:{"exporter.required":{type:"boolean",title:"Exporter Required"}},dependencies:{"exporter.required":{oneOf:[{properties:{"exporter.required":{const:!1}}},{properties:{"exporter.required":{const:!0},"exporter.image":{type:"string",title:"Citrix ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.0"},"exporter.pullpolicy":{type:"string",default:"IfNotPresent",title:"Image Pull Policy",enum:["Always","IfNotPresent","Never"]},"exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:64e3}}}]}}}}},L={adcSettings:{nsIp:{"ui:description":"Citrix ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)"},nsNamespace:{"ui:description":"Resources created on the ADC will have this prefix in their name"},defaultSSLCert:{"ui:description":"Secret containing the default ceritifcate for SSL vservers"},nodeWatch:{"ui:description":"When checked, routes on the Citrix ADC are automatically configured to point to the pod networks on the nodes"}},deploymentSettings:{"license.accept":{"ui:description":"Accept the terms and conditions of the Citrix license. This is mandatory"}}},k={properties:{cpxSettings:{type:"object",title:"CPX Settings",properties:{"cpx.image":{type:"string",title:"Citrix ADC CPX Image",default:"quay.io/citrix/citrix-k8s-cpx-ingress:13.0-47.103"},"cpx.pullpolicy":{type:"string",default:"IfNotPresent",title:"Image Pull Policy",enum:["Always","IfNotPresent","Never"]},nsNamespace:{type:"string",title:"ADC Entity Prefix"},defaultSSLCert:{type:"string",title:"Default SSLCert"},lsIp:{type:"string",title:"License Server IP",format:"ipv4"},lsPort:{type:"number",title:"License Server Port",minimum:1,maximum:64e3}}},deploymentSettings:{type:"object",title:"Deployment Settings",properties:{"license.accept":{type:"boolean",title:"Accept License",default:!1},ingressClass:{type:"string",title:"Ingress Class for the controller"},openshift:{type:"boolean",title:"OpenShift Support",default:!1},logLevel:{type:"string",default:"DEBUG",title:"Ingress Controller Log Level",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}},exporterSettings:{type:"object",title:"Citrix ADC Metrics Exporter Settings",properties:{"exporter.required":{type:"boolean",title:"Exporter Required"}},dependencies:{"exporter.required":{oneOf:[{properties:{"exporter.required":{const:!1}}},{properties:{"exporter.required":{const:!0},"exporter.image":{type:"string",title:"Citrix ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.0"},"exporter.pullpolicy":{type:"string",default:"IfNotPresent",title:"Image Pull Policy",enum:["Always","IfNotPresent","Never"]},"exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:64e3}}}]}}}}},R={cpxSettings:{nsNamespace:{"ui:description":"Resources created on the CPX will have this prefix in their name"},defaultSSLCert:{"ui:description":"Secret containing the default ceritifcate for SSL vservers"},lsPort:{"ui:description":"Specify this only if the ADM license server port has been changed"}},deploymentSettings:{"license.accept":{"ui:description":"Accept the terms and conditions of the Citrix license. This is mandatory"}}};function T(){return i.a.createElement(d.a,{attached:"bottom",padded:!0,style:{margin:"0rem 1.5rem",border:"0"}},"Copyright \xa9 ",i.a.createElement(f.a,{as:"a",href:"https://citrix.com/"},"Citrix Systems")," ",(new Date).getFullYear(),".")}function q(){var e,t,r=["Citrix ADC in Tier 1","CPX in Tier 2","Istio Ingress Gateway","CPX as Istio Sidecar"],a=i.a.useState("Citrix ADC in Tier 1"),n=Object(u.a)(a,2),o=n[0],s=n[1],l=i.a.useState((e={},Object(m.a)(e,r[0],{}),Object(m.a)(e,r[1],{}),Object(m.a)(e,r[2],{}),Object(m.a)(e,r[3],{}),e)),c=Object(u.a)(l,1)[0],p=i.a.useState((t={},Object(m.a)(t,r[0],""),Object(m.a)(t,r[1],""),Object(m.a)(t,r[2],""),Object(m.a)(t,r[3],""),t)),f=Object(u.a)(p,1)[0],S=function(e,t,r){c[e]=t,f[e]=r,console.log("Form id= "+e),console.log("Form data= ",c[e]),console.log("Yaml: ",f[e])},b=function(e){switch(e){case r[0]:return N;case r[1]:return k;default:return N}},v=function(e){switch(e){case r[0]:return L;case r[1]:return R;default:return L}},P=function(e){var t=e.formId,r=e.formData,a=e.yamlStr;return i.a.createElement(i.a.Fragment,null,i.a.createElement(g.a.Row,null,i.a.createElement(w,{schema:b(t),uischema:v(t),formData:r,yamlStr:a,setParentState:S})))};return i.a.createElement(i.a.Fragment,null,i.a.createElement(y.a,{inverted:!0,attached:"top",as:"h1",className:"mastHead"},"Citrix Helm Charts Values Generator"),i.a.createElement(h.a.Pushable,{attached:"top",basic:!0,as:d.a,style:{marginTop:"0",borderRadius:"0",borderTop:"0",borderBottom:"0"}},i.a.createElement(h.a,{style:{top:"-1px"},as:x.a,inverted:!1,vertical:!0,visible:!0,width:"wide"},i.a.createElement(C,{items:r,onClick:function(e,t){console.log("Clicked on "+e),s(e)}})),i.a.createElement(h.a.Pusher,null,i.a.createElement(y.a,{as:"h3",attached:"top",style:{border:"0",margin:"1.5rem 2rem 0 2rem"}},o),i.a.createElement(g.a,{className:"mainlayout"},i.a.createElement(P,{formId:o,formData:c[o],yamlStr:f[o],setParentState:S})),i.a.createElement(T,null))))}var M=function(e){Object(p.a)(r,e);var t=Object(c.a)(r);function r(){return Object(s.a)(this,r),t.apply(this,arguments)}return Object(l.a)(r,[{key:"render",value:function(){return i.a.createElement(q,null)}}]),r}(i.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(i.a.createElement(M,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},357:function(e,t,r){},568:function(e,t,r){e.exports=r(1205)},573:function(e,t,r){}},[[568,1,2]]]);
//# sourceMappingURL=main.a4bba13b.chunk.js.map