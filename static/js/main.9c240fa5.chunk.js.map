{"version":3,"sources":["SidebarItems.js","HelmForm.js","chart-tier-1.js","cpx-cic.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["SidebarItems","this","props","items","map","item","ListItem","key","button","onClick","e","ListItemText","primary","React","Component","HelmForm","state","formData","yamlStr","toYaml","bind","console","log","formId","x","group","k","splits","split","q","p","slice","t","exporterSettings","exporter","yaml","safeDump","setState","setParentState","Grid","container","direction","justify","alignItems","spacing","sm","schema","liveValidate","showErrorList","uiSchema","uischema","onChange","onSubmit","onError","type","Button","variant","color","Divider","orientation","flexItem","Box","Typography","language","tier1schema","properties","adcSettings","title","required","nsIp","format","nsPort","default","maximum","minimum","nsVIP","nsProtocol","enum","nsNamespace","defaultSSLCert","nodeWatch","deploymentSettings","cicImageSettings","dependencies","oneOf","const","tier1uischema","cpxcicschema","cpxSettings","lsIp","lsPort","cpxcicuischema","Copyright","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","useState","open","setOpen","setformId","fixedHeightPaper","clsx","yamlStrs","data","schemaForForm","uischemaForForm","MainContent","Paper","className","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","component","noWrap","Drawer","List","itemName","Container","pt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c240fa5.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nclass SidebarItems extends React.Component {\n  render() {\n        return (\n          <div>\n          {this.props.items.map(((item) => {\n            return (\n              <ListItem key={item} button onClick={(e) => this.props.onClick(item, e)}>\n                <ListItemText primary={item} />\n              </ListItem>\n            );\n          }))}\n          </div>\n        );\n          \n  }\n}\n\nexport default SidebarItems;","import React from 'react';\nimport './App.css';\n//import Form from '@rjsf/core';\nimport Form from \"@rjsf/material-ui\";\nimport yaml from 'js-yaml';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport { Typography, Grid, Box } from '@material-ui/core';\n\n\nconst log = (type) => console.log.bind(console, type);\n\n\nclass HelmForm extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {formData: {...props.formData}, yamlStr: props.yamlStr};\n\t\tthis.toYaml = this.toYaml.bind(this);\n\t\tconsole.log(\"constructor: formData\", this.props.formData);\n\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log(\"componentDidMount: formData\", this.props.formData);\n\t\tconsole.log(\"componentDidMount: yamlStr\", this.props.yamlStr);\n\t\tconsole.log(\"componentDidMount: formId\", this.props.formId);\n\n\t\t//this.setState({formData: {...this.props.formData}, yamlStr: this.props.yamlStr});\n\t}\n\n\ttoYaml({formData}) {\n\t\t//console.log({formData});\n\n\t\tvar x = {};\n\t\tfor (let group in formData) {\n\t\t\tfor (let k in formData[group]) {\n\t\t\t\tvar splits = k.split(\".\"); //e.g., exporter.ports.containerPorts\n\t\t\t\tvar q = formData[group][k];\n\t\t\t\tif (q) { //sometimes it is 'undefined' leading to exceptions in safeDump\n\t\t\t\t\tvar p = x;\n\t\t\t\t\tfor (let t of splits.slice(0,-1) ) {\n\t\t\t\t\t\tif (!(t in p)) {\n\t\t\t\t\t\t\tp[t] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp = p[t];\n\t\t\t\t\t}\n\t\t\t\t\tp[splits.slice(-1)] = q;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!formData.exporterSettings['exporter.required']) {\n\t\t\tdelete x.exporter;\n\t\t}\n\t\tvar yamlStr = yaml.safeDump(x);\n\t\tconsole.log(yamlStr);\n\t\tthis.setState({formData: {...formData}, yamlStr: yamlStr});\n\t\tthis.props.setParentState(this.props.formId, {...formData}, yamlStr);\n\t}\n\n\trender() {\n\t  return (\n\t\t  <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"flex-start\" spacing={1}>\n\t\t  \t\t<Grid item sm={6}>\n\t\t\t\t\t<Form schema={this.props.schema}\n\t\t\t\t\t\t  formData={this.state.formData}\n\t\t\t\t\t\t  liveValidate={true}\n\t\t\t\t\t\t  showErrorList={false}\n\t\t\t\t\t\t  uiSchema={this.props.uischema}\n                          onChange={this.toYaml}\n                          onSubmit={this.toYaml}\n                          onError={log(\"errors\")}>\n\t\t\t\t\t\t<div>\n      \t\t\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\">Generate values.yaml</Button> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t  \t\t</Grid>\n\t\t\t    <Divider orientation=\"vertical\" flexItem/>\n\t\t\t\t<Grid item sm={5}>\n\t\t\t\t\t<Box p=\"1.5rem\" color=\"grey\">\n\t\t\t\t\t\t<Typography variant=\"h5\">Values.yaml</Typography>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box p=\"1.5rem\" >\n\t\t\t\t\t\t<SyntaxHighlighter language=\"yaml\">\n     \t\t\t\t\t\t {this.state.yamlStr}\n    \t\t\t\t\t</SyntaxHighlighter>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t  </Grid>\n\t  );\n\t}\n}\n\nexport default HelmForm;\n","\n\n\n\nexport const tier1schema = {\n  properties: {\n\t\tadcSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"ADC Settings\",\n\t\t\trequired: [\"nsIp\"],\n\t\t\tproperties: {\n\t\t\t\tnsIp: {type: \"string\", title: \"Citrix ADC IP\", format:\"ipv4\"},\n\t\t\t\tnsPort: {type: \"number\", title: \"ADC Port\",  default: 443, maximum: 64000, minimum:1},\n\t\t\t\tnsVIP: {type: \"string\", title: \"Virtual IP for the clients to connect to\", format:\"ipv4\"},\n\t\t\t\tnsProtocol: {type: \"string\", title: \"ADC Management Protocol\", enum:[\"HTTPS\", \"HTTP\"], default: \"HTTPS\"},\n\t\t\t\tnsNamespace: {type: \"string\", title: \"ADC Entity Prefix\"},\n\t\t\t\tdefaultSSLCert: {type: \"string\", title: \"Default SSLCert\"},\n\t\t\t\tnodeWatch: {type: \"boolean\", title: \"Node Watch\", default: false},\n\t\t\t}\n\t\t},\n\t\tdeploymentSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Deployment Settings\",\n\t\t\tproperties: {\n\t\t\t\t'kubernetesURL': {type: \"string\", title: \"Kubernetes API-server URL\", format:\"url\"},\n\t\t\t\t'license.accept': {type: \"boolean\", title: \"Accept License\", default: false},\n\t\t\t\t'ingressClass': {type: \"string\", title: \"Ingress Class for the controller\"},\n\t\t\t\t'logLevel': {type: \"string\", default: \"DEBUG\", title: \"Ingress Controller Log Level\", enum:[\"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"TRACE\"]},\n\t\t\t}\n\t\t},\n\t\tcicImageSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Citrix Ingress Controller Image Settings\",\n\t\t\tproperties: {\n\t\t\t\t'cic.image': {type: \"string\", title: \"Citrix Ingress Controller Image\", default:\"quay.io/citrix/citrix-k8s-ingress-controller:1.7.6\"},\n\t\t\t\t'cic.pullpolicy': {type: \"string\", default: \"IfNotPresent\", title: \"Image Pull Policy\", enum: [\"Always\", \"IfNotPresent\", \"Never\"]}\n\t\t\t}\n\t\t},\n\t\texporterSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Citrix ADC Metrics Exporter Settings\",\n\t\t\tproperties: {\n\t\t\t\t'exporter.required': {type: \"boolean\", title: \"Exporter Required\"},\n\t\t\t\t\n\t\t\t},\n\t\t\tdependencies: {\n\t\t\t\t'exporter.required': {\n\t\t\t\t\toneOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t  \"exporter.required\": {\n\t\t\t\t\t\t\t\tconst: false\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t  \"exporter.required\": {\n\t\t\t\t\t\t\t\tconst: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'exporter.image': {type: \"string\", title: \"Citrix ADC Metrics Exporter Image\", default:'quay.io/citrix/citrix-adc-metrics-exporter:1.4.0'},\n\t\t\t\t\t\t\t'exporter.pullpolicy': {type: \"string\", default: \"IfNotPresent\", title: \"Image Pull Policy\", enum: [\"Always\", \"IfNotPresent\", \"Never\"]},\n\t\t\t\t\t\t\t'exporter.ports.containerPort': {type: \"number\", title: \"Exporter Container Port\", default: 8888, minimum:1, maximum:64000}\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n};\n\nexport const tier1uischema = {\n\tadcSettings: {\n\t\t\"nsIp\" : {\n\t\t\t\"ui:help\": \"Citrix ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)\"\n\t\t},\n\t\t\"nsNamespace\": {\n\t\t\t\"ui:help\": \"Resources created on the ADC will have this prefix in their name\"\n\t\t},\n\t\t\"defaultSSLCert\": {\n\t\t\t\"ui:help\": \"Secret containing the default ceritifcate for SSL vservers\"\n\t\t},\n\t\t\"nodeWatch\": {\n\t\t\t\"ui:help\": \"When checked, routes on the Citrix ADC are automatically configured to point to the pod networks on the nodes\",\n\t\t}\n\t},\n\tdeploymentSettings: {\n\t\t\"license.accept\": {\n\t\t\t\"ui:help\": \"Accept the terms and conditions of the Citrix license. This is mandatory\"\n\t\t} \n\t}\n}\n","\n\n\n\nexport const cpxcicschema = {\n  properties: {\n\t\tcpxSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"CPX Settings\",\n\t\t\tproperties: {\n\t\t\t\t'cpx.image': {type: \"string\", title: \"Citrix ADC CPX Image\", default:\"quay.io/citrix/citrix-k8s-cpx-ingress:13.0-47.103\"},\n\t\t\t\t'cpx.pullpolicy': {type: \"string\", default: \"IfNotPresent\", title: \"Image Pull Policy\", enum: [\"Always\", \"IfNotPresent\", \"Never\"]},\n\t\t\t\tnsNamespace: {type: \"string\", title: \"ADC Entity Prefix\"},\n\t\t\t\tdefaultSSLCert: {type: \"string\", title: \"Default SSLCert\"},\n\t\t\t\tlsIp: {type: \"string\", title: \"License Server IP\", format:\"ipv4\"},\n\t\t\t\tlsPort: {type: \"number\", title: \"License Server Port\", minimum:1, maximum:64000}\n\t\t\t}\n\t\t},\n\t\tdeploymentSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Deployment Settings\",\n\t\t\tproperties: {\n\t\t\t\t'license.accept': {type: \"boolean\", title: \"Accept License\", default: false},\n\t\t\t\t'ingressClass': {type: \"string\", title: \"Ingress Class for the controller\"},\n\t\t\t\t'openshift': {type: \"boolean\", title: \"OpenShift Support\", default: false},\n\t\t\t\t'logLevel': {type: \"string\", default: \"DEBUG\", title: \"Ingress Controller Log Level\", enum:[\"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"TRACE\"]},\n\t\t\t}\n\t\t},\n\t\texporterSettings: {\n\t\t\ttype: \"object\",\n\t\t\ttitle: \"Citrix ADC Metrics Exporter Settings\",\n\t\t\tproperties: {\n\t\t\t\t'exporter.required': {type: \"boolean\", title: \"Exporter Required\"},\n\t\t\t\t\n\t\t\t},\n\t\t\tdependencies: {\n\t\t\t\t'exporter.required': {\n\t\t\t\t\toneOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t  \"exporter.required\": {\n\t\t\t\t\t\t\t\tconst: false\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t  \"exporter.required\": {\n\t\t\t\t\t\t\t\tconst: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'exporter.image': {type: \"string\", title: \"Citrix ADC Metrics Exporter Image\", default:'quay.io/citrix/citrix-adc-metrics-exporter:1.4.0'},\n\t\t\t\t\t\t\t'exporter.pullpolicy': {type: \"string\", default: \"IfNotPresent\", title: \"Image Pull Policy\", enum: [\"Always\", \"IfNotPresent\", \"Never\"]},\n\t\t\t\t\t\t\t'exporter.ports.containerPort': {type: \"number\", title: \"Exporter Container Port\", default: 8888, minimum:1, maximum:64000}\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n};\n\nexport const cpxcicuischema = {\n\tcpxSettings: {\n\t\t\"nsNamespace\": {\n\t\t\t\"ui:help\": \"Resources created on the CPX will have this prefix in their name\"\n\t\t},\n\t\t\"defaultSSLCert\": {\n\t\t\t\"ui:help\": \"Secret containing the default ceritifcate for SSL vservers\"\n\t\t},\n\t\t\"lsPort\": {\n\t\t\t\"ui:help\": \"Specify this only if the ADM license server port has been changed\",\n\t\t}\n\t},\n\tdeploymentSettings: {\n\t\t\"license.accept\": {\n\t\t\t\"ui:help\": \"Accept the terms and conditions of the Citrix license. This is mandatory\"\n\t\t} \n\t}\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport SidebarItems from './SidebarItems';\nimport HelmForm from './HelmForm';\nimport { tier1schema, tier1uischema } from './chart-tier-1';\nimport { cpxcicschema, cpxcicuischema } from './cpx-cic';\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://citrix.com/\">\n        Citrix Systems\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 800,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const items = ['Citrix ADC in Tier 1', 'CPX in Tier 2', 'Istio Ingress Gateway', 'CPX as Istio Sidecar'];\n\n  const [open, setOpen] = React.useState(true);\n  const [formId, setformId] = React.useState('Citrix ADC in Tier 1');\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const itemClick = (itemName, e) => {\n    console.log(\"Clicked on \" + itemName);\n    setformId(itemName);\n  }\n\n  const [formData] = React.useState({[items[0]]: {}, [items[1]]: {}, [items[2]]: {}, [items[3]]: {}});\n  const [yamlStrs] = React.useState({[items[0]]: '', [items[1]]: '', [items[2]]: '', [items[3]]: ''});\n\n  //let formData  = {[items[0]]: {}, [items[1]]: {}, [items[2]]: {}, [items[3]]: {}};\n  //let yamlStrs  = {[items[0]]: '', [items[1]]: '', [items[2]]: '', [items[3]]: ''};\n\n  const setParentState = (formId, data, yamlStr) => {\n    //setFormData(prevFormData => ({...prevFormData, [formData[formId]]:data}));\n    //setYamlStrs(prevYamlStrs =>({...prevYamlStrs, [prevYamlStrs[formId]]: yamlStr}));\n    //formData = {...formData, [formData[formId]]:data};\n    formData[formId] = data;\n    yamlStrs[formId] = yamlStr;\n    console.log(\"Form id= \" + formId);\n    console.log(\"Form data= \", formData[formId]);\n    console.log(\"Yaml: \",  yamlStrs[formId]);\n  }\n\n  const schemaForForm = (formId) => {\n    //TODO\n    switch (formId) {\n      case items[0]:\n        return tier1schema;\n      case items[1]:\n        return cpxcicschema;\n      default:\n        return tier1schema;\n    }\n  }\n\n  const uischemaForForm = (formId) => {\n    //TODO\n    switch (formId) {\n      case items[0]:\n        return tier1uischema;\n      case items[1]:\n        return cpxcicuischema;\n      default:\n        return tier1uischema;\n    }\n  }\n\n  const MainContent = ({formId, formData, yamlStr}) => {\n      return (\n        <Paper className={fixedHeightPaper}>\n          <Typography variant=\"h5\" color=\"primary\">{formId}</Typography>\n          <HelmForm schema={schemaForForm(formId)}  \n                    uischema={uischemaForForm(formId)} \n                    formId={formId}\n                    formData={formData} \n                    yamlStr={yamlStr}\n                    setParentState={setParentState}/>\n        </Paper>\n      );\n\n    } \n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h2\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Citrix Helm Charts Values Generator\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List><SidebarItems items={items} onClick={itemClick}/></List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container  className={classes.container}>\n          <Grid container spacing={3}>\n            <MainContent\n              formId={formId}\n              formData={formData[formId]}\n              yamlStr={yamlStrs[formId]}\n              setParentState={setParentState}\n            />\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\n\nclass App extends React.Component {\n\n\trender() {\n\t  return (\n\t\t<Dashboard/>\n\t  );\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}